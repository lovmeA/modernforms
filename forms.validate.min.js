!function($,window,document,undefined){var _form=function(t,e){this.form=t,this.defaults={},this.options=$.extend({},this.defaults,e),this.methods={GET:"GET",POST:"POST",HEAD:"HEAD",PUT:"PUT",DELETE:"DELETE",CONNECT:"CONNECT",OPTIONS:"OPTIONS",TRACE:"TRACE"}};_form.prototype={init:function(){var t=this,e=t.options.submitBtn;return t.for_form(),t.initParams(),t.data={required:t.func.required,min:t.func.minOrMax,max:t.func.minOrMax,length:t.func.lengths,rules:t.func.rules,equal:t.func.equal,phone:t.func.mobile,email:t.func.email,idcard:t.func.IdCard,url:t.func.url},(e!==undefined?$(e):this.form.find("input:submit")).on("click",function(){t.clickValidation()}),this},for_form:function(){var a=this;$.each(a.form[0],function(t,r){""!==$(r)[0].name&&($(r).on("input propertychange",function(){var n=!0;$.each($(r)[0].dataset,function(t,e){"ruleMessage"!==t&&(a.data[t]($(r))||(a.errFunc[t]($(r),a),n=a.data[t]($(r))),n&&a.msg.success($(r)))})}),$(r).on("blur",function(){var n=!0;$.each($(r)[0].dataset,function(t,e){"ruleMessage"!==t&&(a.data[t]($(r))||(a.errFunc[t]($(r),a),n=a.data[t]($(r))),n&&a.msg.success($(r)))})}))})},initParams:function(){var t=this,e=t.options.sends===undefined||t.options.sends,n=t.methods[(t.options.method?t.options.method:"POST").trim().toUpperCase()];t.url=t.options.url?t.options.url:t.form[0].action,t.method=n!==undefined?n:"POST",t.async=!0!==t.options.async&&!1!==t.options.async||t.options.async,t.sends=!0!==e&&!1!==e||e}},_form.prototype.errFunc={required:function(t,e){e.msg.error(t,t.attr("data-required"))},min:function(t,e){e.msg.error(t,"最小值为:"+t.attr("data-min"))},max:function(t,e){e.msg.error(t,"最大值为:"+t.attr("data-max"))},length:function(t,e){var n=t.attr("data-length").split("-");if(1===n.length&&e.msg.error(t,"最多最少输入"+n[0]+"个字符"),2===n.length)if("*"===n[n.length-1])e.msg.error(t,"最少输入"+n[0]+"个字符");else{var r=t.attr("data-length");e.msg.error(t,"输入字符长度["+r+"]个字符")}},rules:function(t,e){e.msg.error(t,t.attr("data-rule-message"))},equal:function(t,e){e.msg.error(t,"当前输入不一致！")},phone:function(t,e){e.msg.error(t,t.attr("data-phone"))},email:function(t,e){e.msg.error(t,t.attr("data-email"))},idcard:function(t,e){e.msg.error(t,t.attr("data-idcard"))},url:function(t,e){e.msg.error(t,t.attr("data-url"))}},_form.prototype.clickValidation=function(){var r=this,a=!0;$.each(r.form[0],function(t,n){""!==$(n)[0].name&&$.each($(n)[0].dataset,function(t,e){"ruleMessage"!==t&&(r.data[t]($(n),r)||(r.errFunc[t]($(n),r),a=r.data[t]($(n))))})}),a&&r.sends&&r.sendData()},_form.prototype.func={required:function(t){var e=t.val();return""!==e&&null!=e},minOrMax:function(t){var e=t.val(),n=parseInt(t.attr("data-min")),r=parseInt(t.attr("data-max"));if(e=parseInt(e)){if(isNaN(e)||e<n)return!1;if(!isNaN(e)&&r<e)return!1}return!0},lengths:function(t){var e=t.val(),n=t.attr("data-length").split("-");if(""!==e&&1===n.length){var r=parseInt(n);if(e.length!==r)return!1}else if(""!==e&&2===n.length)if("*"===n[1]){var a=parseInt(n[0]);if(e.length<a)return!1}else{var o=parseInt(n[0]),s=parseInt(n[1]);if(e.length<o||e.length>s)return!1}return!0},rules:function(objects){var value=objects.val(),rule=objects.attr("data-rules");return rule=new RegExp(eval(rule)),!(""!==value&&!rule.test(value))},equal:function(t){return t.val()===$(t.attr("data-equal")).val()},mobile:function(t){var e=t.val();return!(""!==e&&!/^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d{8}$/.test(e)&&!/^(0\d{2,3}\d{7,8}|0\d{2,3}-)\d{7,8}$/.test(e))},email:function(t){var e=t.val();return!(""!==e&&!/^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/.test(e))},IdCard:function(t){var e=t.val();return!(""!==e&&!/^([1-9]\d{5}[1]\d{3}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|3[0-1])\d{3}[0-9xX]|[1-9]\d{5}\d{2}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|3[0-1])\d{3})$/.test(e))},url:function(t){var e=t.val();return!(""!==e&&!/^https?:\/\/[A-Za-z0-9]+\.[A-Za-z0-9]+[\/=\?%\-&_~`@[\]\':+!]*([^<>\"\"])*$/.test(e))}},_form.prototype.getCookie=function(){var t=null;if(document.cookie&&""!==document.cookie)for(var e=document.cookie.split(";"),n=0;n<e.length;n++){var r=e[n].trim().split("=");"csrftoken"===r[0]&&(t=r[1]);break}return t},_form.prototype.sendData=function(){var t=this,n=new FormData(t.form[0]);t.options.data!==undefined&&$.each(t.options.data,function(t,e){n.append(t,e)});var e=new XMLHttpRequest;e.open(t.method,t.url,t.async),e.setRequestHeader("X-CSRFToken",t.getCookie()),e.setRequestHeader("x-requested-with","XMLHttpRequest"),e.onreadystatechange=function(){4===e.readyState&&(200===e.status?t.options.success&&t.options.success($.parseJSON(e.responseText)):t.options.fail&&t.options.fail($.parseJSON(e.responseText)))},e.send(n)},_form.prototype.msg={error:function(t,e){t.siblings(".mdn-msg").remove(),t.parent().addClass("mdn-error"),t.parent().append('<span class="mdn-msg msg-hidden right">'+e+"</span>")},success:function(t){t.parent().removeClass("mdn-error"),t.siblings(".mdn-msg").remove()}},$.fn.form=function(t){return new _form(this,t).init()}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
